"""Modify tags to be a flat structure and add TagLabel to represent tag categories

Revision ID: 6e7c22fd38b8
Revises: 5f9d1cd8e78f
Create Date: 2023-08-11 16:03:55.149792

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6e7c22fd38b8'
down_revision = '5f9d1cd8e78f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tags', sa.Column('label_id', sa.Integer(), nullable=True))
    op.drop_constraint('tags_parent_id_fkey', 'tags', type_='foreignkey')
    op.create_foreign_key(None, 'tags', 'taglabels', ['label_id'], ['id'])
    op.drop_column('tags', 'parent_id')
    op.drop_column('tags', 'is_leaf')
    op.drop_column('tags', 'required')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tags', sa.Column('required', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.add_column('tags', sa.Column('is_leaf', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.add_column('tags', sa.Column('parent_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'tags', type_='foreignkey')
    op.create_foreign_key('tags_parent_id_fkey', 'tags', 'tags', ['parent_id'], ['id'])
    op.drop_column('tags', 'label_id')
    # ### end Alembic commands ###
